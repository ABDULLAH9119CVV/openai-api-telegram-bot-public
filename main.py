#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import openai
import telebot
from telebot import types
from datetime import datetime
from sys import platform
import time

from botapiconfig import openaiapi, telegrambotapi

openai.api_key = openaiapi
bot = telebot.TeleBot(telegrambotapi)

last_messages_chatgpt = {}
last_messages_dalletwo = {}


def mainstarter():
    @bot.message_handler(commands=['start'])
    def start_message(message):
        if message.chat.type != 'private':
            markdown = """üö® *–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï*: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ `/start` –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ *–ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö* —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –∏–ª–∏ –∫–∞–Ω–∞–ª–∞—Ö –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.

üôè –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ —ç—Ç–æ–º—É –ø—Ä–∞–≤–∏–ª—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª—é–±—ã—Ö –ø—Ä–æ–±–ª–µ–º. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!"""
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
            return
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.InlineKeyboardButton("–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã")
        button2 = types.InlineKeyboardButton("–ú–æ–∏ —á–∞—Ç—ã")
        button3 = types.InlineKeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞ –º–æ–Ω–µ—Ç–æ–π")
        button4 = types.InlineKeyboardButton("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        button5 = types.InlineKeyboardButton("–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥")
        button6 = types.InlineKeyboardButton("–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞")
        markup.add(button1, button2, button3, button4, button5, button6)
        sticker = open("sticker.webp", "rb")
        bot.send_sticker(message.chat.id, sticker)
        markdown = """–ü—Ä–∏–≤–µ—Ç –¥—Ä—É–≥! üëã\n–î–∞–Ω–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ ChatGPT –∏ DALLE-2. üíª\n–û—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç—Å—è –∂–¥–∞—Ç—å –¥–æ–≤–æ–ª—å–Ω–æ –¥–æ–ª–≥–æ. ‚è≥\n\n*–ß—Ç–æ —Ç–∞–∫–æ–µ ChatGPT?* ‚ùì\nChatGPT - —ç—Ç–æ –º–æ–¥–µ–ª—å —è–∑—ã–∫–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è OpenAI. –û–Ω–∞ –±—ã–ª–∞ –æ–±—É—á–µ–Ω–∞ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ —Ç–µ–∫—Å—Ç–æ–≤ –∏ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —è–∑—ã–∫–∞. üí°\n\n*–ß—Ç–æ —Ç–∞–∫–æ–µ DALLE-2?* ‚ùì\nDALLE-2 - —ç—Ç–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–æ–¥–µ–ª—å –≥–ª—É–±–æ–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–Ω–∞—è OpenAI, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞.\n\n*–ö–∞–∫ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT?* ‚ùì\n–õ–µ–≥–∫–æ! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /chatgpt –í–ê–®-–ó–ê–ü–†–û–° üòâ\n\n*–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –æ—Ç DALLE-2?* ‚ùì\n–õ–µ–≥–∫–æ! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /dalle2 –í–ê–®-–ó–ê–ü–†–û–° üòâ"""
        bot.send_message(message.chat.id, markdown, reply_markup=markup, parse_mode="Markdown")

    @bot.message_handler(commands=['dalle2'])
    def dalletwo(message):
        if message.text.lower() == "/dalle2@avencoreschatgpt_bot":
            markdown = """üö´ *–û—à–∏–±–∫–∞:* –ö–æ–º–∞–Ω–¥–∞ `/dalle2@avencoreschatgpt_bot` –æ–∫–∞–∑–∞–ª–∞—Å—å –ø—É—Å—Ç–æ–π, –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `/dalle2@avencoreschatgpt_bot`, —á—Ç–æ–±—ã DALLE-2 –º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–ª–∏ –∫ –Ω–∞—à–µ–π —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. üíªü§ñ"""
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        if message.text.lower() == "/dalle2":
            markdown = """üö´ *–û—à–∏–±–∫–∞*: –ö–æ–º–∞–Ω–¥–∞ `/dalle2` –æ–∫–∞–∑–∞–ª–∞—Å—å –ø—É—Å—Ç–æ–π, –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `/dalle2`, —á—Ç–æ–±—ã DALLE-2 –º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–ª–∏ –∫ –Ω–∞—à–µ–π —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. üíªü§ñ"""
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        elif len(message.text.split(maxsplit=1)[1]) > 500:
            markdown = "üö´ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è - 500 —Å–∏–º–≤–æ–ª–æ–≤.*"
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        elif message.chat.id in last_messages_dalletwo and time.time() - last_messages_dalletwo[message.chat.id] < 30:
            markdown = "üö´ *–°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.*"
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        else:

            if message.from_user.id in last_messages_dalletwo:
                elapsed_time = time.time() - last_messages_dalletwo[message.from_user.id]
                if elapsed_time < 30:
                    time.sleep(30 - elapsed_time)

            msg = bot.send_message(message.chat.id, "üìÑ –ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

            try:
                is_new_message = False
                response = openai.Image.create(
                    prompt=message.text,
                    n=1,
                    size="1024x1024"
                )

                if is_new_message:
                    bot.send_message(message.chat.id, "‚ùå –£–≤—ã, –Ω–æ –¥–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")
                    return

                username = message.from_user.first_name
                output = response['data'][0]['url']
                markdown = f"üë® *–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:* `{username}`\n\nü§î *–ó–∞–ø—Ä–æ—Å:* `{message.text.split(maxsplit=1)[1]}`\n\nüòä *–û—Ç–≤–µ—Ç –æ—Ç DALLE-2:* [–∫–∞—Ä—Ç–∏–Ω–∫–∞ –æ—Ç DALLE-2]({output})"
                bot.delete_message(message.chat.id, msg.message_id)
                bot.send_message(chat_id=message.chat.id, text="‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
                bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")

                f = open("chatlog.txt", "a")
                f.writelines('---------------------------------------------------------------------------')
                f.writelines('\n')
                f.writelines(f'Model: DALLE-2')
                f.writelines('\n')
                f.writelines(f'ChatID: {message.chat.id}')
                f.writelines('\n')
                f.writelines(f'UserID: {message.from_user.id}')
                f.writelines('\n')
                f.writelines(f'Username: {message.from_user.username}')
                f.writelines('\n')
                f.writelines(f'Date: {datetime.fromtimestamp(message.date)}')
                f.writelines('\n')
                f.writelines(f'User Message: {message.text.split(maxsplit=1)[1]}')
                f.writelines('\n')
                f.writelines(f'AI reply: {output}')
                f.writelines('\n')
                f.writelines('---------------------------------------------------------------------------')
                f.writelines('\n\n')
                f.close
            except openai.error.OpenAIError as e:
                bot.edit_message_text("‚ùå –£–≤—ã, –Ω–æ –¥–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω.", chat_id=message.chat.id, message_id=msg.message_id)

            last_messages_dalletwo[message.chat.id] = time.time()

    @bot.message_handler(commands=['chatgpt'])
    def chatgpt(message):
        if message.text.lower() == "/chatgpt@avencoreschatgpt_bot":
            markdown = """üö´ *–û—à–∏–±–∫–∞*: –ö–æ–º–∞–Ω–¥–∞ `/chatgpt@avencoreschatgpt_bot` –æ–∫–∞–∑–∞–ª–∞—Å—å –ø—É—Å—Ç–æ–π, –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `/chatgpt@avencoreschatgpt_bot`, —á—Ç–æ–±—ã ChatGPT –º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–ª–∏ –∫ –Ω–∞—à–µ–π —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. üíªü§ñ"""
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        if message.text.lower() == "/chatgpt":
            markdown = """üö´ *–û—à–∏–±–∫–∞*: –ö–æ–º–∞–Ω–¥–∞ `/chatgpt` –æ–∫–∞–∑–∞–ª–∞—Å—å –ø—É—Å—Ç–æ–π, –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `/chatgpt`, —á—Ç–æ–±—ã ChatGPT –º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–ª–∏ –∫ –Ω–∞—à–µ–π —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. üíªü§ñ"""
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        elif len(message.text.split(maxsplit=1)[1]) > 500:
            markdown = "üö´ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è - 500 —Å–∏–º–≤–æ–ª–æ–≤.*"
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        elif message.chat.id in last_messages_chatgpt and time.time() - last_messages_chatgpt[message.chat.id] < 30:
            markdown = "üö´ *–°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.*"
            bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")
        else:

            if message.from_user.id in last_messages_chatgpt:
                elapsed_time = time.time() - last_messages_chatgpt[message.from_user.id]
                if elapsed_time < 30:
                    time.sleep(30 - elapsed_time)

            msg = bot.send_message(message.chat.id, "üìÑ –ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

            try:
                is_new_message = False
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[{"role": "user", "content": message.text}],
                )

                if is_new_message:
                    bot.send_message(message.chat.id, "‚ùå –£–≤—ã, –Ω–æ –¥–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")
                    return


                output = response["choices"][0]["message"]["content"]
                max_len = 3000
                parts = [output[i:i + max_len] for i in range(0, len(output), max_len)]
                for part in parts:
                    username = message.from_user.first_name
                    markdown = f"üë® *–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:* `{username}`\n\nü§î *–ó–∞–ø—Ä–æ—Å:* `{message.text.split(maxsplit=1)[1]}`\n\nüòä *–û—Ç–≤–µ—Ç –æ—Ç ChatGPT:* `{part}`"
                    bot.delete_message(message.chat.id, msg.message_id)
                    bot.send_message(chat_id=message.chat.id, text="‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
                    bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="Markdown")

                    f = open("chatlog.txt", "a")
                    f.writelines('---------------------------------------------------------------------------')
                    f.writelines('\n')
                    f.writelines(f'Model: ChatGPT')
                    f.writelines('\n')
                    f.writelines(f'ChatID: {message.chat.id}')
                    f.writelines('\n')
                    f.writelines(f'UserID: {message.from_user.id}')
                    f.writelines('\n')
                    f.writelines(f'Username: {message.from_user.username}')
                    f.writelines('\n')
                    f.writelines(f'Date: {datetime.fromtimestamp(message.date)}')
                    f.writelines('\n')
                    f.writelines(f'Prompt: {message.text.split(maxsplit=1)[1]}')
                    f.writelines('\n')
                    f.writelines(f'AI reply: {output}')
                    f.writelines('\n')
                    f.writelines('---------------------------------------------------------------------------')
                    f.writelines('\n\n')
                    f.close

            except openai.error.OpenAIError as e:
                bot.edit_message_text("‚ùå –£–≤—ã, –Ω–æ –¥–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω.", chat_id=message.chat.id, message_id=msg.message_id)

            last_messages_chatgpt[message.chat.id] = time.time()

    @bot.message_handler(content_types=['text'])
    def send_text(message):
        if message.chat.type != 'private':
            return
        if message.text.lower() == "–º–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã":
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("–ì—Ä—É–ø–ø–∞ VK", url="https://vk.com/chatgptcontent")
            button2 = types.InlineKeyboardButton("Telegram –∫–∞–Ω–∞–ª", url="https://t.me/hzfnews")
            markup.add(button1, button2)
            markdown = """*–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É –í–ö –∏ Telegram –∫–∞–Ω–∞–ª üì¢*

–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏ –∫–∞–Ω–∞–ª–µ –≤ Telegram! üîç –¢–∞–º –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö, –∞–Ω–æ–Ω—Å–∞—Ö –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∞ —Ç–∞–∫–∂–µ –æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. üí¨

–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –æ–±–∞ –∫–∞–Ω–∞–ª–∞, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º. ü§ñ

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! üôè"""
            bot.send_message(message.chat.id, markdown, reply_markup=markup, parse_mode="Markdown")

        elif message.text.lower() == "–ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞ –º–æ–Ω–µ—Ç–æ–π":
            markdown = """ *–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞ –º–æ–Ω–µ—Ç–æ–π üí∞*

–ï—Å–ª–∏ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—à –ø—Ä–æ–µ–∫—Ç, –º—ã –±—É–¥–µ–º –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ –ª—é–±—É—é –ø–æ–º–æ—â—å.

–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–æ–Ω–∞—Ç –Ω–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É —á–µ—Ä–µ–∑ —Å–ª–µ–¥—É—é—â–∏–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã:

*QIWI*: [–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è](https://qiwi.com/n/AVENCORESDONATE) üí≥
*–°–±–µ—Ä*: `2202 2050 7215 4401` üíµ
*–í–¢–ë*: `2200 2404 1001 8580` üí∂

–í–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. üöÄ

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É! üôè"""
            bot.send_message(message.chat.id, markdown, parse_mode="Markdown")

        elif message.text.lower() == "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞":
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("–Ø –≤ VK", url="https://vk.com/avencores")
            button2 = types.InlineKeyboardButton("–Ø –≤ Telegram", url="https://t.me/avencores")
            markup.add(button1, button2)
            markdown = """*–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ üõ†Ô∏è*

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ–≤–æ–¥—É –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏, –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –≤–∞–º.

–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö, –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É. üëá

–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±—ã—Å—Ç—Ä—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã. üí¨

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! üôè"""
            bot.send_message(message.chat.id, markdown, reply_markup=markup, parse_mode="Markdown")

        elif message.text.lower() == "—Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞":
            markdown = datetime.now().strftime(f"""*–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.* ü§ñ\n
*–í—Ä–µ–º—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ*: %H:%M:%S ‚è∞
*–î–∞—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ*: %d.%m.%y üìÖ

*–°–∏—Å—Ç–µ–º–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ*: {platform} üíª""")
            bot.send_message(message.chat.id, markdown, parse_mode="Markdown")

        elif message.text.lower() == "–∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥":
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("GitHub Page", url="https://github.com/AvenCores/chatgpt-telegram-bot-public")
            button2 = types.InlineKeyboardButton("Full GNU GPL V3", url="https://www.gnu.org/licenses/quick-guide-gplv3.ru.html")
            markdown = """‚ö†Ô∏è *–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ* ‚ö†Ô∏è

–î–∞–Ω–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π GNU GPL 3. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ —Å–≤–æ–±–æ–¥–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –≤—Å–µ –≤–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å—Å—è –ø–æ–¥ —Ç–æ–π –∂–µ –ª–∏—Ü–µ–Ω–∑–∏–µ–π. üÜì

–ú—ã –ø—Ä–æ—Å–∏–º –≤–∞—Å —É–≤–∞–∂–∞—Ç—å –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç –≤ –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö —Ü–µ–ª—è—Ö. –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ GNU GPL 3, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ. ‚ùå

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —É–≤–∞–∂–µ–Ω–∏–µ –∫ –ø—Ä–∞–≤–∞–º –∞–≤—Ç–æ—Ä–æ–≤! üôè"""
            markup.add(button1, button2)
            bot.send_message(message.chat.id, markdown, reply_markup=markup, parse_mode="Markdown")

        elif message.text.lower() == "–º–æ–∏ —á–∞—Ç—ã":
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton("Telegram Chat", url="https://t.me/+MDOUaUZzWlEwNjRi")
            button2 = types.InlineKeyboardButton("VK Chat", url="https://vk.me/join/VqYKejk4a/QQvIXq6DhW6huxyAJ/A7cCiD4=")
            markdown = """üì£ *–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É Telegram –∏ VK —á–∞—Ç—É!* üöÄ

üë• –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å–º–æ–∂–µ—Ç–µ –æ–±—Å—É–∂–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–º—ã, –¥–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º –∏ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã.

üí¨ –û–±—â–µ–Ω–∏–µ —Å –ª—é–¥—å–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–¥–µ–ª—è—é—Ç –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã, –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–π –Ω–∞—Ö–æ–¥–∫–æ–π! –ê –µ—â–µ —É –Ω–∞—Å –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—É—á–∏—Ç—å—Å—è –Ω–æ–≤—ã–º –Ω–∞–≤—ã–∫–∞–º –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–π –∫—Ä—É–≥–æ–∑–æ—Ä.

üëâ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è! üíªüì±"""
            markup.add(button1, button2)
            bot.send_message(message.chat.id, markdown, reply_markup=markup, parse_mode="Markdown")


        else:
            markdown = """–û—à–∏–±–∫–∞! –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ü§î

–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç Telegram –±–æ—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ /start üëâüëÄ

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞ ü§ó

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! üôè"""
            bot.send_message(message.chat.id, markdown, parse_mode="Markdown")

    bot.polling(none_stop=True)


while True:
    try:
        mainstarter()
    except Exception:
        continue
